# Generated by Django 5.2.7 on 2025-10-06 02:29

import django.db.models.deletion
import entitlements.models_base
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Role',
            fields=[
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('IN_ACTIVE', 'Inactive'), ('SUSPENDED', 'Suspended')], db_column='status', db_index=True, default='INACTIVE', max_length=25)),
                ('unique_reference_id', models.CharField(blank=True, db_column='unique_reference_id', default=entitlements.models_base.default_unique_ref, max_length=25, null=True, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on', db_index=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on', db_index=True, null=True)),
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=128)),
                ('tenant_code', models.CharField(blank=True, db_index=True, max_length=64, null=True)),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('permissions', models.ManyToManyField(blank=True, to='auth.permission')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'role',
                'ordering': ('-id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('IN_ACTIVE', 'Inactive'), ('SUSPENDED', 'Suspended')], db_column='status', db_index=True, default='INACTIVE', max_length=25)),
                ('unique_reference_id', models.CharField(blank=True, db_column='unique_reference_id', default=entitlements.models_base.default_unique_ref, max_length=25, null=True, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on', db_index=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on', db_index=True, null=True)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('code', models.CharField(db_index=True, max_length=64, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('settings', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tenant',
                'ordering': ('-id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('IN_ACTIVE', 'Inactive'), ('SUSPENDED', 'Suspended')], db_column='status', db_index=True, default='INACTIVE', max_length=25)),
                ('unique_reference_id', models.CharField(blank=True, db_column='unique_reference_id', default=entitlements.models_base.default_unique_ref, max_length=25, null=True, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on', db_index=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on', db_index=True, null=True)),
                ('tenant_code', models.CharField(blank=True, db_index=True, help_text='When set, this role assignment applies only within that tenant.', max_length=64, null=True)),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_links', to='entitlements.role')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_links', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_role',
                'ordering': ('-id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserTenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('IN_ACTIVE', 'Inactive'), ('SUSPENDED', 'Suspended')], db_column='status', db_index=True, default='INACTIVE', max_length=25)),
                ('unique_reference_id', models.CharField(blank=True, db_column='unique_reference_id', default=entitlements.models_base.default_unique_ref, max_length=25, null=True, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on', db_index=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on', db_index=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='users', to='entitlements.tenant')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tenant_link', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_tenant',
                'ordering': ('-id',),
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='role',
            index=models.Index(fields=['tenant_code'], name='role_tenant__97c1fa_idx'),
        ),
        migrations.AddIndex(
            model_name='role',
            index=models.Index(fields=['label'], name='role_label_c98c5d_idx'),
        ),
        migrations.AddIndex(
            model_name='tenant',
            index=models.Index(fields=['code'], name='tenant_code_e34888_idx'),
        ),
        migrations.AddIndex(
            model_name='tenant',
            index=models.Index(fields=['active'], name='tenant_active_8d8b4c_idx'),
        ),
        migrations.AddIndex(
            model_name='userrole',
            index=models.Index(fields=['tenant_code'], name='user_role_tenant__c43b4e_idx'),
        ),
        migrations.AddIndex(
            model_name='userrole',
            index=models.Index(fields=['user', 'tenant_code'], name='user_role_user_id_4abfeb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userrole',
            unique_together={('user', 'role', 'tenant_code')},
        ),
        migrations.AddIndex(
            model_name='usertenant',
            index=models.Index(fields=['tenant'], name='user_tenant_tenant__74e43f_idx'),
        ),
    ]
